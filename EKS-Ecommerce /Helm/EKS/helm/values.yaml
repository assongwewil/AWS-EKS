# Registry and repository for Docker images
# Default is docker/robotshop/image:latest
image:
  repo: robotshop
  version: latest
  pullPolicy: IfNotPresent

# EUM configuration
# Provide your key and set the endpoint
eum:
  key: null
  url: https://eum-eu-west-1.instana.io
  #url: https://eum-us-west-2.instana.io

# Pod Security Policy
psp:
  enabled: false

# For the mini ones minikube, minishift set to true
nodeport: false

# "special" Openshift. Set to true when deploying to any openshift flavour
openshift: false

ocCreateRoute: false

######################################
# Affinities for individual workloads
# set in the following way:
# <workload>:
#   affinity: {}
#   nodeSelector: {}
#   tolerations: []
######################################

cart: {}

catalogue: {}

dispatch: {}

mongodb: {}

mysql: {}

payment:
  # Alternative payment gateway URL
  # Default is https://www.paypal.com
  gateway: null
  #gateway: https://www.worldpay.com

rabbitmq: {}

ratings: {}

redis:
  # Storage class to use with redis statefulset.
  storageClassName: gp2

shipping: {}

user: {}

web: {}


# LINK 

https://www.udemy.com/course/kubernetes-microservices/learn/lecture/27935030#overview

use helm pull to get the chart from the repo first into our local 

We need to download source code for chart and store locally 

Writing GO TEMPLATES 

number: 1  here 

Then in the template we can reference it 

replicas: {{ .Values.number}}


  updateStrategy:
    type: {{ .Values.updateStrategy }}
  {{- if .Values.persistence.enabled }}



    app: "{{ template "elasticsearch.uname" . }}"
    {{- range $key, $value := .Values.labels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}



{{ toYaml .Values.readinessProbe | indent 10 }}
        ports:
        - name: http
          containerPort: {{ .Values.httpPort }}
        - name: transport
          containerPort: {{ .Values.transportPort }}
        resources:


{{ end }}
          {{- range .Values.secretMounts }}
          - name: {{ .name }}
            mountPath: {{ .path }}
            {{- if .subPath }}
            subPath: {{ .subPath }}
            {{- end }}
          {{- end }}


full list of function HELM DOC 

HOW TO WE CALL FUNCTION IN GO 


GO FUNCTIONS 


NAME OF THE FUNCTION FOLLOW BY SPACE FOLLOW BY A LIST OF PARAMETERS

{{ FUNCTIONNAME  SPACE LIST OF PARAMETERS }}

{{ FUNCTIONNAME  SPACE 1P 2p 3p 4p etc }}  ie 1P = first parameter 

If we don't have the value define in the values.yaml but we are referring to it in the template **** error 


SEQUENCE FUNCTION IN GO 
If we want to join multiple functions 

{{ Value | upper  }}  *** we take the value and pipe it to the function Upper


{{ .Values.repoName | default "wilrepo"  }}     Get the value of repoName from the values.yaml as pass it to default function 
if there's no value default function w2ill use wilrepo as the default value 


{{ .Values.repoName | default "wilrepo" | upper  }} # and then pipe the result to the upper function 